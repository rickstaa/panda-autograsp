## Main configuration file for the panda_autograsp solution
# This file contains the configuration values used in the panda_autograsp solution

## Panda_autograsp visualization settings ##
vis: # Show grasp images using opencv (Useful for debugging)
  rgbd_state: 0
  cropped_rgbd_image: 0
  color_image: 0
  depth_image: 0
  segmask: 0
  final_grasp: 0

## Panda_autograsp default values ##
defaults:
  solution: gqcnn
  models_dir: ./models # Folder in which models are downloaded

## Calibration settigns ##
calibration:
  pose_estimation_calib_board: aruco_board # [aruco_board or chessboard]

## Robot parameters ##
robot:
  gripper_width: 0.08 # [m]
  gripper_center:  [0.07, 0, 0, 0, 0, 0] # (x, y, z, yaw, pitch roll) in [m, rad] Relative to the panda_link8 frame

## Grasping detection solution settings ##
grasp_detection_solutions:

  ## GQCNN grasping solution settings ##
  gqcnn:

    ## GQCNN default values ##
    defaults:

      ## Uncomment the model you want to use ##
      # model: GQCNN-2.0 # Trained on images of objects in singulation
      # model: GQCNN-2.1 # Model fine-tuned on images of objects in clutter
      model: GQCNN-4.0-PJ # Trained on images of objects in clutter with parameters
      # model: FC-GQCNN-4.0-PJ # Improved network trained on images of objects in clutter

    ## Important GQCNN paths ##
    parameters:
      !include ./_cfg/gqcnn_parms.yaml

## Grasp detection solution output settings ##
grasp_detection_result:

  include_thumbnail: 0 # Include grasp photo thumbnail in output grasp object/
  thumbnail_resize: 0.5 # Resize fraction of thumbnail compared to original sensor image (needs to be between 0 and 1).

## Robot planning settings
planning:

  general:
    planning_time: 5 # [s] Max number of seconds moveit can spend on the path planning.

  point: # Plan to point
    point_n_step: 5 # The number of times moveit tries to plan to a given point.

  cartesian: # Plan cartesian path.
    eef_step: 1.0
    jump_threshold: 0.0

## Robot control settings
control:
